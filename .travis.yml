dist: trusty
sudo: false
language: cpp

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - g++-6
      - git

before_install:
  # Set the extra prefix for external libraries and tools
  - export EXTRA_DIR="$PWD/extra"
  # Set the prefix used to install googletest, set the source
  # directory and get the source code
  - export GTEST_DIR="$EXTRA_DIR/googletest"
  - export GTEST_SRC_DIR="$GTEST_DIR/source"
  - mkdir -p "$GTEST_DIR" "$GTEST_SRC_DIR"
  - pushd "$GTEST_SRC_DIR"
  - git clone --depth 1 https://github.com/google/googletest.git -b v1.8.x .
  - popd
  # Get LLCOV
  - export LCOV_DIR="$EXTRA_DIR/lcov"
  - mkdir -p "$LCOV_DIR"
  - pushd "$LCOV_DIR"
  - wget https://github.com/linux-test-project/lcov/archive/v1.12.zip
  - unzip v1.12.zip
  - LCOV="$PWD/lcov-1.12/bin/lcov --gcov-tool gcov-6"
  - popd

before_script:
  # Build and install googletest
  - pushd "$GTEST_SRC_DIR"
  - cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX="$GTEST_DIR" .
  - make -j
  - make install
  - popd

script:
  # Save some directories
  - export PROJECT_DIR="$PWD"
  - export TEST_SRC_DIR="$PROJECT_DIR/test"
  - export BUILD_DIR="$PROJECT_DIR/build"
  # Print some information
  - echo "Current dir is $PWD"
  - echo "GTest dir is $GTEST_DIR"
  - echo "Boost dir is $BOOST_DIR"
  # Set compiler
  - export CXX=/usr/bin/g++-6
  # Set compiler flags
  - export CXXFLAGS="-std=c++98 -Wall -Wextra -Wconversion"
  - export CXXFLAGS="$CXXFLAGS -I$PROJECT_DIR/.."
  - export CXXFLAGS="$CXXFLAGS -I$GTEST_DIR/include"
  # Set linker flags
  - export LDFLAGS="-lgtest_main -lgtest -lpthread -L$GTEST_DIR/lib"
  # Set coverage flags
  - export COVFLAGS="--coverage"
  # Create the build directory
  - mkdir -p "$BUILD_DIR" && pushd "$BUILD_DIR"
  # Build and run each test
  - $CXX $CXXFLAGS "$TEST_SRC_DIR"/test*.cpp -o test $LDFLAGS $COVFLAGS
  - ./test
  - popd

after_success:
  # Set the coverage file name for lcov
  - export COVERAGE_FILE="$PWD/coverage.info"
  # Run lcov on the generated coverage data
  - $LCOV --directory "$BUILD_DIR" --base-directory "$PROJECT_DIR" --capture --output-file "$COVERAGE_FILE"
  # Keep only the project headers in the coverage data by
  # removing the tests themselves and the extra libraries
  - $LCOV --remove "$COVERAGE_FILE" "/usr*" "$TEST_SRC_DIR/*" "$EXTRA_DIR/*" -o "$COVERAGE_FILE"
  - bash <(curl -s https://codecov.io/bash) || echo "Codecov did not collect coverage reports"
